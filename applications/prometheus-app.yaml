apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  project: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: prometheus-operator-crds
    targetRevision: "*"
    helm:
      values: |
        crds:
          enabled: false
        # --- General footprint tweaks (good for Pis/small nodes) ---
        defaultRules:
          create: true
        kubeScheduler:
          enabled: true
        kubeControllerManager:
          enabled: true
        kubeProxy:
          enabled: true
        # Keep retention small; reduce TSDB size
        prometheus:
          prometheusSpec:
            retention: 7d
            scrapeInterval: 30s
            evaluationInterval: 30s
            resources:
              requests:
                cpu: 100m
                memory: 300Mi
              limits:
                cpu: 500m
                memory: 1Gi

        # Node Exporter runs on every node (CPU/mem/disk/net)
        nodeExporter:
          resources:
            requests:
              cpu: 20m
              memory: 50Mi

        # kube-state-metrics footprint
        kubeStateMetrics:
          resources:
            requests:
              cpu: 20m
              memory: 60Mi
                # --- Grafana with HTTPS via Traefik + your wildcard cert ---
                grafana:
                  enabled: true
                  admin:
                    existingSecret: grafana-admin   # create this Secret once (see note below)
                    userKey: admin-user
                    passwordKey: admin-password
                  ingress:
                    enabled: true
                    ingressClassName: traefik
                    annotations:
                      traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
                      traefik.ingress.kubernetes.io/router.tls: "true"
                      traefik.ingress.kubernetes.io/router.middlewares: kube-system-https-redirect@kubernetescrd
                    hosts:
                      - grafana.k8s
                  grafana.ini:
                    server:
                      root_url: http://grafana.k8s
                      serve_from_sub_path: false
                  resources:
                    requests:
                      cpu: 50m
                      memory: 120Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ "CreateNamespace=true", "ServerSideApply=true" ]