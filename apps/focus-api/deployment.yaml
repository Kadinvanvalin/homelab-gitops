apiVersion: apps/v1
kind: Deployment
metadata:
  name: focus-api
  annotations:
nnotations:
  # Track this image (name on the left is arbitrary "alias")
  argocd-image-updater.argoproj.io/image-list: focus-api=ghcr.io/kadinvanvalin/focus-api
  # Strategy: treat "latest" as movable; updater will write a change to Git
  argocd-image-updater.argoproj.io/focus-api.update-strategy: latest
  # Allow tag "latest" explicitly (helps avoid semver filtering)
  argocd-image-updater.argoproj.io/focus-api.allow-tags: latest
  # If the tag name doesn't change, still update (e.g., write digest)
  argocd-image-updater.argoproj.io/focus-api.force-update: "true"
  # Write the update back to Git so ArgoCD sees a diff and syncs
  argocd-image-updater.argoproj.io/write-back-method: git
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: focus-api
  template:
    metadata:
      labels:
        app: focus-api
    spec:
      volumes:
        - name: ssh
          secret:
            secretName: git-ssh-key
            defaultMode: 0400
        - name: repo
          persistentVolumeClaim:
            claimName: pvc-notes      # <-- PVC name
      containers:
        - name: app
          volumeMounts:
            - name: ssh
              mountPath: /home/app/.ssh
              readOnly: true
            - name: repo
              mountPath: /app/notes
          image: ghcr.io/kadinvanvalin/focus-api:latest
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet: { path: /healthz, port: http }
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /healthz, port: http }
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: focus-api
spec:
  selector:
    app: focus-api
  ports:
    - name: http
      port: 80
      targetPort: http                 # matches the container's named port